syntax = "proto3";

package user.v1;

option go_package = "github.com/example/user/v1;userv1";

import "google/api/annotations.proto";

// UserService provides user management functionality
service UserService {
  // GetUser retrieves a user by ID
  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/users/{id}"
    };
  }
  
  // ListUsers retrieves all users
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/users"
    };
  }
  
  // CreateUser creates a new user
  rpc CreateUser(CreateUserRequest) returns (User) {
    option (google.api.http) = {
      post: "/users"
      body: "*"
    };
  }
  
  // UpdateUser updates an existing user
  rpc UpdateUser(UpdateUserRequest) returns (User) {
    option (google.api.http) = {
      put: "/users/{user.id}"
      body: "user"
    };
  }
  
  // DeleteUser deletes a user
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/users/{id}"
    };
  }
}

// User represents a user entity
message User {
  string id = 1;
  string name = 2;
  string email = 3;
  bool active = 4;
}

// GetUserRequest for retrieving a user
message GetUserRequest {
  string id = 1;
}

// ListUsersRequest for listing users
message ListUsersRequest {
  int32 page_size = 1;
  string page_token = 2;
}

// ListUsersResponse for user list
message ListUsersResponse {
  repeated User users = 1;
  string next_page_token = 2;
}

// CreateUserRequest for creating users
message CreateUserRequest {
  string name = 1;
  string email = 2;
}

// UpdateUserRequest for updating users
message UpdateUserRequest {
  User user = 1;
}

// DeleteUserRequest for deleting users
message DeleteUserRequest {
  string id = 1;
}

// DeleteUserResponse for delete confirmation
message DeleteUserResponse {
  bool success = 1;
}